# example pipeline for Polaris scans using the Synopsys Security Scan extension for ADO
# https://marketplace.visualstudio.com/items?itemName=synopsys-security-scan.synopsys-security-scan
trigger:
- main
- develop

pool:
  vmImage: ubuntu-latest

variables:
  - group: polaris_var_group

steps:
- task: JavaToolInstaller@0
  displayName: 'Use Java 17'
  inputs:
    versionSpec: 17
    jdkArchitectureOption: x64
    jdkSourceOption: PreInstalled

- task: Maven@4
  displayName: 'Maven Build'
  inputs:
    options: '-B -DskipTests'

- task: SynopsysSecurityScan@1
  displayName: 'Polaris Full Scan'
  condition: not(eq(variables['Build.Reason'], 'PullRequest'))
  inputs:
    BRIDGE_POLARIS_SERVERURL: $(POLARIS_SERVERURL)
    BRIDGE_POLARIS_ACCESSTOKEN: $(POLARIS_ACCESSTOKEN)
    BRIDGE_POLARIS_ASSESSMENT_TYPES: 'SAST,SCA'
    BRIDGE_POLARIS_APPLICATION_NAME: bravompPersonal
    BRIDGE_POLARIS_PROJECT_NAME: $(Build.Repository.Name)
    BRIDGE_POLARIS_BRANCH_NAME: $(Build.SourceBranchName)
    BRIDGE_POLARIS_REPORTS_SARIF_CREATE: true

- task: SynopsysSecurityScan@1
  displayName: 'Polaris PR Scan'
  condition: eq(variables['Build.Reason'], 'PullRequest')
  inputs:
    BRIDGE_POLARIS_SERVERURL: $(POLARIS_SERVERURL)
    BRIDGE_POLARIS_ACCESSTOKEN: $(POLARIS_ACCESSTOKEN)
    BRIDGE_POLARIS_ASSESSMENT_TYPES: 'SAST,SCA'
    BRIDGE_POLARIS_APPLICATION_NAME: bravompPersonal
    BRIDGE_POLARIS_PROJECT_NAME: $(Build.Repository.Name)
    BRIDGE_POLARIS_BRANCH_NAME: $(Build.SourceBranchName)
    BRIDGE_POLARIS_BRANCH_PARENT_NAME: $(System.PullRequest.targetBranchName)
    BRIDGE_POLARIS_PRCOMMENT_ENABLED: true
    AZURE_TOKEN: $(System.AccessToken)

- task: ArchiveFiles@2
  displayName: 'Copy Log Files'
  condition: succeededOrFailed()
  enabled: false
  inputs:
    rootFolderOrFile: .bridge
    includeRootFolder: false
    archiveFile: '$(Build.ArtifactStagingDirectory)/bridge-logs.zip'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Log Files'
  condition: succeededOrFailed()
  enabled: false
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'logs'
